@mixin make-flash($background, $border, $color) {
    border-color: $border;

    background: $background;
    color: $color !important;

    a {
        color: $color;
    }
}

@mixin make-flash-outline($border, $color) {
    border-color: $border;
    background: transparent;
    color: $color !important;

    a {
        color: $color;
    }
}

.flash {
    padding: 0.75rem 1rem;
    border-radius: $border-radius;
    border: solid 1px $border-color;
    position: relative;

    a {
        font-weight: 700;
        text-decoration: underline;

        &:hover {
            text-decoration: none;
        }
    }

    &.fixed {
        padding: 0.75rem 1rem;
    }

    p:last-of-type {
        margin-bottom: 0;
    }

    &.flash-dismissible {
        padding-right: 3rem;
    }

    .close {
        cursor: pointer;
        font-size: 1.4rem;
        line-height: 1;
        margin-top: -0.85rem;
        opacity: 0.75;
        position: absolute;
        right: 0.75rem;
        text-decoration: none;
        top: 50%;
        transition: all 0.25s ease-in-out;

        &:hover {
            opacity: 1;
        }
    }

    code {
        color: inherit;
        background-color: transparent;
        border-color: inherit;
    }
}

$alert-bg-scale: -70%;
$alert-border-scale: -25%;
$alert-color-scale: 50%;

@each $color, $value in $themeColors {
    $alert-background: shift-color($value, $alert-bg-scale);
    $alert-border: shift-color($value, $alert-border-scale);
    $alert-color: shift-color($value, $alert-color-scale);

    @if (contrast-ratio($alert-background, $alert-color) < $min-contrast-ratio) {
        $alert-color: mix($value, color-contrast($alert-background), abs($alert-color-scale));
    }

    .flash-#{$color} {
        @include make-flash($alert-background, $alert-border, $alert-color);
    }
}
