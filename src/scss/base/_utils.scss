@mixin utils($infix: '') {
    // Responsive overflow
    .overflow#{$infix}-x-auto {
        overflow-x: auto !important;
    }
    .overflow#{$infix}-y-auto {
        overflow-y: auto !important;
    }
    .overflow#{$infix}-x-hidden {
        overflow-x: hidden !important;
    }
    .overflow#{$infix}-y-hidden {
        overflow-y: hidden !important;
    }
    .overflow#{$infix}-x-visible {
        overflow-x: visible !important;
    }
    .overflow#{$infix}-y-visible {
        overflow-y: visible !important;
    }

    @each $value in $displays {
        .d#{$infix}-#{$value} {
            display: $value !important;
        }
    }

    // Responsive Border Radius
    .rounded#{$infix} {
        border-radius: $border-radius !important;
    }
    .rounded#{$infix}-pill {
        border-radius: rem(1000) !important;
    }
}

@mixin borders($infix: '') {
    $defaultBorder: $border-color solid $border-width;
    .border#{$infix} {
        border: $defaultBorder;
    }
    .border#{$infix}-t,
    .border#{$infix}-y {
        border-top: $defaultBorder;
    }
    .border#{$infix}-r,
    .border#{$infix}-x {
        border-right: $defaultBorder;
    }
    .border#{$infix}-b,
    .border#{$infix}-y {
        border-bottom: $defaultBorder;
    }
    .border#{$infix}-l,
    .border#{$infix}-x {
        border-left: $defaultBorder;
    }

    @each $name, $size in $border-widths {
        .border#{$infix}-#{$name} {
            border-width: $size !important;
        }
    }
}

@each $breakpoint in map-keys($standard-breakpoints) {
    @include breakpoint($breakpoint) {
        $infix: get-breakpoint-infix($breakpoint);
        @include borders($infix);
        @include utils($infix);
    }
}
